{"remainingRequest":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\xinhai\\Desktop\\staticPage\\docs\\algorithms\\dp\\1.md?vue&type=template&id=42ec868a&","dependencies":[{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\docs\\algorithms\\dp\\1.md","mtime":1634097917487},{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632365707450},{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1632365701520},{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632365707450},{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\vue-loader\\lib\\index.js","mtime":1632365701520},{"path":"C:\\Users\\xinhai\\Desktop\\staticPage\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1632365706963}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJwIiwgW192bS5fdigiI0xpc3RWaWV3IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdigiY2xhc3MgRnJ1aXQiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlXG5cbnB1YmxpYyBjbGFzcyBGcnVpdCh2YWwgbmFtZTpTdHJpbmcsdmFsIGltYWdlSWQ6SW50KTpTZXJpYWxpemFibGUge1xuXG59XG4iCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgW192bS5fdigiRnJ1aXRBZGFwdGVyIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgImltcG9ydCBhbmRyb2lkLmFwcC5BY3Rpdml0eVxuaW1wb3J0IGFuZHJvaWQudmlldy5MYXlvdXRJbmZsYXRlclxuaW1wb3J0IGFuZHJvaWQudmlldy5WaWV3XG5pbXBvcnQgYW5kcm9pZC52aWV3LlZpZXdHcm91cFxuaW1wb3J0IGFuZHJvaWQud2lkZ2V0LkFycmF5QWRhcHRlclxuaW1wb3J0IGFuZHJvaWQud2lkZ2V0LkltYWdlVmlld1xuaW1wb3J0IGFuZHJvaWQud2lkZ2V0LlRleHRWaWV3XG5cbmNsYXNzIEZydWl0QWRhcHRlciAoYWN0aXZpdHk6IEFjdGl2aXR5LCB2YWwgIHJlc291cmNlSWQ6IEludCwgZGF0YTpMaXN0PEZydWl0Pik6QXJyYXlBZGFwdGVyPEZydWl0PihhY3Rpdml0eSxyZXNvdXJjZUlkLGRhdGEpe1xuICAgIG92ZXJyaWRlIGZ1biBnZXRWaWV3KHBvc2l0aW9uOiBJbnQsIGNvbnZlcnRWaWV3OiBWaWV3PywgcGFyZW50OiBWaWV3R3JvdXApOiBWaWV3IHtcbiAgICAgICAgdmFsIHZpZXc6IFZpZXdcbiAgICAgICAgaWYoY29udmVydFZpZXc9PW51bGwpe1xuXG4gICAgICAgICAgICB2aWV3PUxheW91dEluZmxhdGVyWzFdLmZyb20oY29udGV4dCkuaW5mbGF0ZShyZXNvdXJjZUlkLHBhcmVudCxmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHZpZXc9Y29udmVydFZpZXdcbiAgICAgICAgfVxuXG4gICAgICAgIHZhbCBmcnVpdEltYWdlOiBJbWFnZVZpZXcgPXZpZXcuZmluZFZpZXdCeUlkKFIuaWQuZnVyaXRfaW1hZ2UpXG4gICAgICAgIHZhbCBmcnVpdE5hbWU6IFRleHRWaWV3PXZpZXcuZmluZFZpZXdCeUlkKFIuaWQuZnVyaXRfbmFtZSk7XG4gICAgICAgIHZhbCBmcnVpdD1nZXRJdGVtKHBvc2l0aW9uKTtcbiAgICAgICAgaWYoZnJ1aXQhPW51bGwpe1xuICAgICAgICAgICAgZnJ1aXRJbWFnZS5zZXRJbWFnZVJlc291cmNlKGZydWl0LmltYWdlSWQpO1xuICAgICAgICAgICAgZnJ1aXROYW1lLnRleHQ9ZnJ1aXQubmFtZVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2aWV3XG4gICAgfVxufVxuIgogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIm1haW5BY3Rpdml0eSIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICdpbXBvcnQgYW5kcm9pZC5jb250ZW50LkludGVudFxuaW1wb3J0IGFuZHJvaWR4LmFwcGNvbXBhdC5hcHAuQXBwQ29tcGF0QWN0aXZpdHlcbmltcG9ydCBhbmRyb2lkLm9zLkJ1bmRsZVxuaW1wb3J0IGFuZHJvaWQud2lkZ2V0LkFycmF5QWRhcHRlclxuaW1wb3J0IGFuZHJvaWQud2lkZ2V0LlRvYXN0XG5pbXBvcnQga290bGlueC5hbmRyb2lkLnN5bnRoZXRpYy5tYWluLmFjdGl2aXR5X21haW4uKlxuXG5jbGFzcyBNYWluQWN0aXZpdHkgOiBBcHBDb21wYXRBY3Rpdml0eSgpIHtcbiAgICBwcml2YXRlIHZhbCBmcnVpdExpc3Q9IEFycmF5TGlzdDxGcnVpdD4oKVxuXG4gICAgb3ZlcnJpZGUgZnVuIG9uQ3JlYXRlKHNhdmVkSW5zdGFuY2VTdGF0ZTogQnVuZGxlPykge1xuICAgICAgICBzdXBlci5vbkNyZWF0ZShzYXZlZEluc3RhbmNlU3RhdGUpXG4gICAgICAgIHNldENvbnRlbnRWaWV3KFIubGF5b3V0LmFjdGl2aXR5X21haW4pXG4gICAgICAgIGluaXRGcnVpdHMoKTtcbiAgICAgICAgdmFsIGFkYXB0ZXI9RnJ1aXRBZGFwdGVyKHRoaXMsUi5sYXlvdXQuZnJ1aXRfaXRlbSxmcnVpdExpc3QpO1xuICAgICAgICBsaXN0X3ZpZXcuYWRhcHRlcj1hZGFwdGVyXG4gICAgICAgIGxpc3Rfdmlldy5zZXRPbkl0ZW1DbGlja0xpc3RlbmVyIHsgXywgXywgcG9zaXRpb24sIF8gLT5cbiAgICAgICAgICAgIHZhbCBmcnVpdD1mcnVpdExpc3RbcG9zaXRpb25dXG4gICAgICAgICAgICBUb2FzdC5tYWtlVGV4dCh0aGlzLGZydWl0Lm5hbWUsVG9hc3QuTEVOR1RIX1NIT1JUKS5zaG93KClcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIHByaXZhdGUgZnVuIGluaXRGcnVpdHMoKXtcbiAgICAgICAgcmVwZWF0KDIpe1xuICAgICAgICAgICAgZnJ1aXRMaXN0LmFkZChGcnVpdCgiQXBwbGUiLFIuZHJhd2FibGUuaWNfbGF1bmNoZXJfYmFja2dyb3VuZCkpXG4gICAgICAgICAgICBmcnVpdExpc3QuYWRkKEZydWl0KCJiYW5hbiIsUi5kcmF3YWJsZS5pY19sYXVuY2hlcl9iYWNrZ3JvdW5kKSlcbiAgICAgICAgICAgIGZydWl0TGlzdC5hZGQoRnJ1aXQoIkF3ZWUiLFIuZHJhd2FibGUuaWNfbGF1bmNoZXJfYmFja2dyb3VuZCkpXG4gICAgICAgICAgICBmcnVpdExpc3QuYWRkKEZydWl0KCJBcHB3bGUiLFIuZHJhd2FibGUuaWNfbGF1bmNoZXJfYmFja2dyb3VuZCkpXG4gICAgICAgICAgICBmcnVpdExpc3QuYWRkKEZydWl0KCJBcHBsd2VlIixSLmRyYXdhYmxlLmljX2xhdW5jaGVyX2JhY2tncm91bmQpKVxuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBcbn1cbicKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJhY3Rpdml0eV9tYWluIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04Ij8+XG48TGluZWFyTGF5b3V0IHhtbG5zOmFuZHJvaWQ9Imh0dHA6Ly9zY2hlbWFzLmFuZHJvaWQuY29tL2Fway9yZXMvYW5kcm9pZCJcbiAgICB4bWxuczphcHA9Imh0dHA6Ly9zY2hlbWFzLmFuZHJvaWQuY29tL2Fway9yZXMtYXV0byJcbiAgICB4bWxuczp0b29scz0iaHR0cDovL3NjaGVtYXMuYW5kcm9pZC5jb20vdG9vbHMiXG4gICAgYW5kcm9pZDpsYXlvdXRfd2lkdGg9Im1hdGNoX3BhcmVudCJcbiAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3BhcmVudCJcbiAgICBhbmRyb2lkOm9yaWVudGF0aW9uPSJ2ZXJ0aWNhbCJcbiAgICBhbmRyb2lkOmJhY2tncm91bmQ9IkBkcmF3YWJsZS9zZWEiXG4gICAgdG9vbHM6Y29udGV4dD0iLk1haW5BY3Rpdml0eSI+XG5cbiAgICA8TGlzdFZpZXdcbiAgICAgICAgYW5kcm9pZDppZD0iQCtpZC9saXN0X3ZpZXciXG4gICAgICAgIGFuZHJvaWQ6bGF5b3V0X3dpZHRoPSJtYXRjaF9wYXJlbnQiXG4gICAgICAgIGFuZHJvaWQ6bGF5b3V0X2hlaWdodD0ibWF0Y2hfcGFyZW50IiAvPlxuXG48L0xpbmVhckxheW91dD5cbicKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJmcnVpdF9pdGVtIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04Ij8+XG48TGluZWFyTGF5b3V0IHhtbG5zOmFuZHJvaWQ9Imh0dHA6Ly9zY2hlbWFzLmFuZHJvaWQuY29tL2Fway9yZXMvYW5kcm9pZCJcbiAgICB4bWxuczp0b29scz0iaHR0cDovL3NjaGVtYXMuYW5kcm9pZC5jb20vdG9vbHMiXG4gICAgYW5kcm9pZDpsYXlvdXRfd2lkdGg9Im1hdGNoX3BhcmVudCJcbiAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9IndyYXBfY29udGVudCJcbiAgICBhbmRyb2lkOm9yaWVudGF0aW9uPSJob3Jpem9udGFsIlxuICAgIHRvb2xzOmNvbnRleHQ9Ii5NYWluQWN0aXZpdHkiPlxuXG4gICAgPEltYWdlVmlld1xuICAgICAgICBhbmRyb2lkOmlkPSJAK2lkL2Z1cml0X2ltYWdlIlxuICAgICAgICBhbmRyb2lkOmxheW91dF93aWR0aD0ibWF0Y2hfcGFyZW50IlxuICAgICAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3BhcmVudCIgLz5cbiAgICA8VGV4dFZpZXdcbiAgICAgICAgYW5kcm9pZDppZD0iQCtpZC9mdXJpdF9uYW1lIlxuICAgICAgICBhbmRyb2lkOmxheW91dF93aWR0aD0ibWF0Y2hfcGFyZW50IlxuICAgICAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3BhcmVudCJcbiAgICAgICAgYW5kcm9pZDpsYXlvdXRfZ3Jhdml0eT0iY2VudGVyX3ZlcnRpY2FsIlxuICAgICAgICBhbmRyb2lkOmxheW91dF9tYXJnaW5MZWZ0PSIxMGRwIlxuICAgICAgICA+XG4gICAgPC9UZXh0Vmlldz5cbjwvTGluZWFyTGF5b3V0PlxuJwogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}